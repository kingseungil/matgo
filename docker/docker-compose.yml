version: '3.7'
name: matgo

services:
  matgo-server:
    image: ${NCP_CONTAINER_REGISTRY}/matgo:latest
    container_name: matgo-server
    env_file:
      - .env
    expose:
      - "8080"
    depends_on:
      - mysql
      - redis
      - elasticsearch
    restart: always
    networks:
      - matgo

  mysql:
    image: mysql:latest
    container_name: mysql
    env_file:
      - .env.db
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - matgo

  nginx:
    image: nginx:latest
    container_name: nginx-docker
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - matgo

  redis:
    image: redis:alpine
    container_name: redis
    environment:
      - appendonly=yes
      - appendfsync=everysec
      - auto-aof-rewrite-percentage=100
      - auto-aof-rewrite-min-size=64mb
    volumes:
      - ./redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - matgo
    restart: always

  elasticsearch:
    build:
      context: ./elastic
      dockerfile: Dockerfile
      args:
        VERSION: 8.6.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - matgo
    restart: always

volumes:
  elasticsearch-data:
    driver: local

networks:
  matgo:
    driver: bridge
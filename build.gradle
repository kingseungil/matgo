import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'matgo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // openfegin
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // s3
    implementation platform('software.amazon.awssdk:bom:2.21.45')
    implementation 'software.amazon.awssdk:s3'

    // database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.23.1'


    // elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // rest assured
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'

    // restdocs ,swagger
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// ------ Querydsl 설정 ------------
def generatedQueryDsl = 'src/main/generated/querydsl'

sourceSets {
    main.java.srcDirs += [generatedQueryDsl]
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generatedQueryDsl))
}

clean.doLast {
    file(generatedQueryDsl).deleteDir()
}
// ------------------------------

// --------restdocs, swagger 설정 ------------
openapi3 {
    setServer("http://61.97.184.147")
    title = "matgo-API"
    description = "matgo-API입니다"
    version = "1.0.0"
    format = "yaml"
    outputFileNamePrefix = "matgo-api"
    outputDirectory = 'build/resources/main/static/docs'
}


// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
    delete file('src/main/resources/static/docs')
    copy {
        from 'build/resources/main/static/docs'
        into 'src/main/resources/static/docs'
    }
}

bootJar {
    dependsOn(':openapi3')
}
// ----------------------------------

